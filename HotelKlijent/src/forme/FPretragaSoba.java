/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.IzdavanjeSobe;
import domen.Soba;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import logika.Kontroler;
import modeli.ModelTabeleSobe;

/**
 *
 * @author Marjan
 */
public class FPretragaSoba extends javax.swing.JDialog {

    List<Soba> sobe;
    FUnosNovogIzdavanjaSobe formaIzdavanje;

    /**
     * Creates new form FPretragaSob
     */
    public FPretragaSoba(java.awt.Frame parent, boolean modal) throws IOException {
        super(parent, modal);
        initComponents();
        Kontroler.getInstanca().popuniTabeluSoba(this);
        postaviOsluskivac();
        setLocationRelativeTo(null);
        btnIzaberi.setVisible(false);

    }

    public FPretragaSoba(java.awt.Frame parent, boolean modal, FUnosNovogIzdavanjaSobe funis) throws IOException {
        super(parent, modal);
        initComponents();
        Kontroler.getInstanca().popuniTabeluSoba(this);
        postaviOsluskivac();
        setLocationRelativeTo(null);
        formaIzdavanje = funis;
        srediFormuZaUnosIznajmljivanja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSobe = new javax.swing.JTable();
        txtFilterSoba = new javax.swing.JTextField();
        btnRacun = new javax.swing.JButton();
        btnIzaberi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pretraga soba");

        jLabel2.setText("Unesite broj zeljene sobe:");

        tabelaSobe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaSobe);

        btnRacun.setText("Racun");
        btnRacun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRacunActionPerformed(evt);
            }
        });

        btnIzaberi.setText("Izaberi");
        btnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFilterSoba, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRacun, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(btnIzaberi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFilterSoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIzaberi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRacun))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiActionPerformed
        int red = tabelaSobe.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati sobu koju zelite da dodate!");
        } else {
//            try {
            // sobe = Kontroler.getInstanca().vratiSobe();
            ModelTabeleSobe mts = (ModelTabeleSobe) tabelaSobe.getModel();
            Soba s = mts.vratiSobu(red);
            if (!s.isZauzeta()) {
                formaIzdavanje.setIzabranaSoba(s);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "izabrali ste sobu ciji su kapaciteti popunjeni");
            }
//            } catch (IOException ex) {
//                Logger.getLogger(FPretragaGostiju.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
     }//GEN-LAST:event_btnIzaberiActionPerformed

    private void btnRacunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRacunActionPerformed
        int red = tabelaSobe.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati sobu za koju zelite da generisete racun!");
        } else {
            try {
                ModelTabeleSobe mts = (ModelTabeleSobe) tabelaSobe.getModel();
                Soba s = mts.vratiSobu(red);

                List<IzdavanjeSobe> listaSvihIzdavanja = Kontroler.getInstanca().vratiIzdavanja();

                boolean pom = false;
                for (IzdavanjeSobe izdavanjeSobe : listaSvihIzdavanja) {
                    if (izdavanjeSobe.getSoba().getBrojSobe() == s.getBrojSobe() & !izdavanjeSobe.isPlaceno()) {
                        pom = true;
                    }
                }

                if (pom) {
                    FGenerisiRacun fgr = new FGenerisiRacun(null, true, s);
                    this.setVisible(false);
                    fgr.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Izabrali ste sobu u kojoj nije smesten ni jednan gost!");
                }
            } catch (IOException ex) {
                Logger.getLogger(FPretragaSoba.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnRacunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPretragaSoba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPretragaSoba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPretragaSoba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPretragaSoba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    FPretragaSoba dialog = new FPretragaSoba(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(FPretragaSoba.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzaberi;
    private javax.swing.JButton btnRacun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaSobe;
    private javax.swing.JTextField txtFilterSoba;
    // End of variables declaration//GEN-END:variables

    public void srediFormu(List<Soba> sobe) {
        TableModel tm = new ModelTabeleSobe(sobe);
        tabelaSobe.setModel(tm);
    }

    public void popuniTabeluNeuspesno() {
        JOptionPane.showMessageDialog(this, "Ne postoji nijedna soba u bazi.");
    }

    private void postaviOsluskivac() {
        txtFilterSoba.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filter();
            }

        });

    }

    private void filter() {
        String filter = txtFilterSoba.getText().trim();
        if (filter.length() == 0 || filter.isEmpty()) {
            ModelTabeleSobe mts = Kontroler.getInstanca().vratiModelSobe();
            tabelaSobe.setModel(mts);
        }
        try {
            Kontroler.getInstanca().filterS(filter, this);
        } catch (IOException ex) {
            Logger.getLogger(FPretragaSoba.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void filterNeuspesan() {
        JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje sobe po zadatim vrednostima!");

    }

    private void srediFormuZaUnosIznajmljivanja() {
        btnRacun.setVisible(false);
        btnIzaberi.setVisible(true);
    }

    public void filterUspesno() {
        JOptionPane.showMessageDialog(this, "Sistem je našao sobe po zadatim vrednostima!");
    }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import java.awt.Color;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import klijent.PovezivanjeSaServerom;
import util.DBUtil;

/**
 *
 * @author Marjan
 */
public class FPocetna extends javax.swing.JFrame {

    /**
     * Creates new form Pocetna
     */
    public FPocetna() {
        initComponents();
        setTitle("Povezivanje sa serverom");
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIPAdresa = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        btnPrijava = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("IP adresa:");

        jLabel2.setText("Port:");

        txtIPAdresa.setText("127.0.0.1");

        txtPort.setText("9000");

        btnPrijava.setText("Prijavi se na sistem");
        btnPrijava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrijavaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPrijava, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIPAdresa))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIPAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPrijava, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrijavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrijavaActionPerformed
        PovezivanjeSaServerom pss = new PovezivanjeSaServerom();
        String IPAdresa = txtIPAdresa.getText().trim();
        String portStr = txtPort.getText().trim();
        try {
            validacija(IPAdresa, portStr);
            int port = -1;
            try {
                port = Integer.parseInt(txtPort.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Za vrednost porta unesite broj!");
                txtPort.setBorder(BorderFactory.createLineBorder(Color.red));
                return;
            }

            DBUtil dbUtil;
            String portIzFilea = null;
            String ipAdresa = null;
            try {
                dbUtil = new DBUtil();
                dbUtil.setPort(port);
                dbUtil.setIPAdresa(IPAdresa);
                portIzFilea = dbUtil.vratiPort();
                ipAdresa = dbUtil.vratiIPAdresu();
            } catch (IOException ex) {
                ex.getStackTrace();
            }

            try {
                if (pss.poveziSeSaServerom(ipAdresa, Integer.parseInt(portIzFilea))) {
                    JOptionPane.showMessageDialog(this, "Uspesno ste se povezali sa serverom!");
                    FLogin fl = new FLogin(ipAdresa, Integer.parseInt(portIzFilea));
                    dispose();
                    fl.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Podaci za povezivanje nisu ispravni!");
                    txtIPAdresa.setBorder(BorderFactory.createLineBorder(Color.red));
                    txtPort.setBorder(BorderFactory.createLineBorder(Color.red));
                }

            } catch (Exception e) {
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greska: " + e.getMessage());
        }


    }//GEN-LAST:event_btnPrijavaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPocetna().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrijava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtIPAdresa;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

    private void validacija(String IPAdresa, String portStr) throws Exception {
        if ((IPAdresa == null || IPAdresa.isEmpty()) && (portStr == null || portStr.isEmpty())) {
            Border border = BorderFactory.createLineBorder(Color.red);
            txtIPAdresa.setBorder(border);
            txtPort.setBorder(border);
            throw new Exception("Sva polja su obavezna!");
        } else {
            txtIPAdresa.setBorder(BorderFactory.createEtchedBorder());
            txtPort.setBorder(BorderFactory.createEtchedBorder());
        }
        if (IPAdresa == null || IPAdresa.isEmpty()) {
            Border border = BorderFactory.createLineBorder(Color.red);
            txtIPAdresa.setBorder(border);
            throw new Exception("Morate uneti IP adresu");
        } else {
            txtIPAdresa.setBorder(BorderFactory.createEtchedBorder());
        }

        if (portStr == null || portStr.isEmpty()) {
            Border border = BorderFactory.createLineBorder(Color.red);
            txtPort.setBorder(border);
            throw new Exception("Morate uneti port");
        } else {
            txtPort.setBorder(BorderFactory.createEtchedBorder());
        }

    }

    void postaviVrednosti(String adresa, int port) {
        txtIPAdresa.setText(adresa);
        txtPort.setText(port + "");
    }
}
